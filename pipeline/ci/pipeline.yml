groups:
- name: main
  jobs:
  - destroy-environment
  - execute-unit-tests
  - build-app
  - create-services
  - deploy-app
  - set-environment-requirements
  - execute-smoketests
resources:
- name: pipeline
  type: git
  source:
    branch: {{pipeline-git-branch}}
    uri: {{pipeline-git-url}}
- name: application-spec
  type: gcs-resource
  source:
    bucket: {{GCP_BUCKET}}
    json_key: {{gcp_service_account_key}}
    versioned_file: {{stack-file}}

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

jobs:
### Init Environment
- name: destroy-environment
  public: true
  plan:
  - get: pipeline
  - get: application-spec
  - task: destroy-environment
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: czero/cflinuxfs2
      params:
        GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
        GCP_BUCKET: {{GCP_BUCKET}}
        APP_NAME: "greeting-ui fortune-service"
        PWS_API: {{pws-api}}
        PWS_ORG: {{pws-organization}}
        PWS_USER: {{deploy-username}}
        PWS_PWD: {{deploy-password}}
        PWS_SPACE: {{pws-space}}
      inputs:
      - name: pipeline
      - name: application-spec
      run:
        path: pipeline/pipeline/ci/tasks/destroy-environment.sh  
### Unit Tests
- name: execute-unit-tests
  public: true
  plan:
  - get: pipeline
    trigger: false
  - get: application-spec
    trigger: false
  - task: run-execute-unit-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: pipeline
      run:
        path: pipeline/pipeline/ci/tasks/run-unit-tests.sh

### Build Artifacts
- name: build-app
  serial: true
  public: true
  plan:
  - get: pipeline
    trigger: true
    passed:
      - execute-unit-tests
  - get: application-spec
    trigger: false
  - task: build-applications
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: quay.io/alekssaul/maven-git
          tag: "v1.1"
      params:
        APP_SPEC: application-spec/{{stack-file}}
      inputs:
      - name: pipeline
      - name: application-spec
      outputs:
      - name: application-artifacts
      run:
        path: pipeline/pipeline/ci/tasks/build-artifact.sh
  - task: parse-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: quay.io/alekssaul/yaml2json
          tag: "v1.0"
      params:
        APP_SPEC: application-spec/{{stack-file}}
      inputs:
      - name: pipeline
      - name: application-spec
      - name: application-artifacts
      outputs:
      - name: application-bundle
      run:
        path: pipeline/pipeline/ci/tasks/parse-manifest.sh
  - task: upload-application-spec
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: czero/cflinuxfs2
      params:
        GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
        GCP_BUCKET: {{GCP_BUCKET}}
      inputs:
      - name: pipeline
      - name: application-bundle
      - name: application-spec
      run:
        path: pipeline/pipeline/ci/tasks/upload-artifact.sh
### Request Services
- name: create-services
  serial: true
  public: true
  plan:
  - get: pipeline
    trigger: true
    passed:
      - build-app
  - get: application-spec
    trigger: true
  - task: create-services
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: czero/cflinuxfs2
      params:
        GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
        GCP_BUCKET: {{GCP_BUCKET}}
        PWS_API: {{pws-api}}
        PWS_ORG: {{pws-organization}}
        PWS_USER: {{deploy-username}}
        PWS_PWD: {{deploy-password}}
        PWS_SPACE: {{pws-space}}
        GIT_URI: {{GIT_APP-CONFIG}}
      inputs:
      - name: pipeline
      - name: application-spec
      run:
        path: pipeline/pipeline/ci/tasks/create-service.sh
### CF Push
- name: deploy-app
  serial: true
  public: true
  plan:
  - get: pipeline
    trigger: true
    passed:
      - create-services
  - get: application-spec    
  - task: push-app-greeting
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: czero/cflinuxfs2
      params:
        GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
        GCP_BUCKET: {{GCP_BUCKET}}
        APP_NAME: greeting-ui
        PWS_API: {{pws-api}}
        PWS_ORG: {{pws-organization}}
        PWS_USER: {{deploy-username}}
        PWS_PWD: {{deploy-password}}
        PWS_SPACE: {{pws-space}}
        GIT_URI: {{GIT_APP-CONFIG}}
      inputs:
      - name: pipeline
      - name: application-spec      
      run:
        path: pipeline/pipeline/ci/tasks/push-app.sh
### Set Environment Requirements
- name: set-environment-requirements
  serial: true
  public: true
  plan:
  - get: pipeline
    trigger: true
    passed:
      - deploy-app
  - get: application-spec
  - task: ingregration
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: czero/cflinuxfs2
      params:
        PWS_API: {{pws-api}}
        PWS_ORG: {{pws-organization}}
        PWS_USER: {{deploy-username}}
        PWS_PWD: {{deploy-password}}
        PWS_SPACE: {{pws-space}}
        C2C: {{C2C}}
      inputs:
      - name: pipeline
      - name: application-spec      
      run:
        path: pipeline/pipeline/ci/tasks/set-environment-requirements.sh
### Smoke Tests
- name: execute-smoketests
  serial: true
  public: true
  plan:
  - get: pipeline
    trigger: true
    passed:
      - set-environment-requirements
  - task: smoke-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: czero/cflinuxfs2
      params:        
        PWS_API: {{pws-api}}
        PWS_ORG: {{pws-organization}}
        PWS_USER: {{deploy-username}}
        PWS_PWD: {{deploy-password}}
        PWS_SPACE: {{pws-space}}
      inputs:
      - name: pipeline
      run:
        path: pipeline/pipeline/ci/tasks/smoke-test.sh